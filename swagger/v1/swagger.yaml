---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/brands":
    get:
      summary: get all brands created by current user
      tags:
      - Brands
      security:
      - bearer_auth: {}
      responses:
        '200':
          description: success
        '401':
          description: not authenticated
    post:
      summary: create brand
      tags:
      - Brands
      parameters: []
      security:
      - bearer_auth: {}
      responses:
        '201':
          description: brand created
        '401':
          description: not authenticated
        '422':
          description: record invalid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                brand:
                  type: object
                  properties:
                    name:
                      type: string
                    state:
                      type: string
                      enum:
                      - active
                      - archived
                    fields_attributes:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        data:
                          type: string
                        field_type_id:
                          type: string
                        _destroy:
                          type: boolean
                      required:
                      - name
                  required:
                  - name
              required:
              - brand
  "/api/v1/brands/{id}":
    put:
      summary: update brand
      tags:
      - Brands
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
      - bearer_auth: {}
      responses:
        '200':
          description: brand edited
        '401':
          description: not authenticated
        '422':
          description: record invalid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                brand:
                  type: object
                  properties:
                    name:
                      type: string
                    state:
                      type: string
                      enum:
                      - active
                      - archived
                    fields_attributes:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        data:
                          type: string
                        field_type_id:
                          type: string
                        _destroy:
                          type: boolean
              required:
              - brand
  "/api/v1/card_activities":
    post:
      summary: Retrieve a report of card activities for current user base on filters
      tags:
      - Card Activities (Report)
      parameters: []
      security:
      - bearer_auth: {}
      responses:
        '200':
          description: success
        '401':
          description: not authenticated
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                card_activity:
                  type: object
                  properties:
                    filters:
                      type: object
                      properties:
                        card_id:
                          type: string
                        product_id:
                          type: string
                        brand_id:
                          type: string
                        client_id:
                          type: string
                        name:
                          type: string
                        from_datetime:
                          type: string
                          example: '2025-02-11T15:15:09+00:00'
  "/api/v1/clients":
    get:
      summary: get all clients associate with current user
      tags:
      - Clients
      security:
      - bearer_auth: {}
      responses:
        '200':
          description: success
        '401':
          description: not authenticated
    post:
      summary: Create client
      tags:
      - Clients
      parameters: []
      security:
      - bearer_auth: {}
      responses:
        '201':
          description: client created
        '401':
          description: not authenticated
        '422':
          description: invalid record
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                client:
                  type: object
                  properties:
                    name:
                      type: string
                    password:
                      type: string
                    payout_rate:
                      type: decimal
                      example: 75.0
                  required:
                  - name
                  - password
                  - payout_rate
              required:
              - client
  "/api/v1/clients/{id}":
    get:
      summary: Retrieve client
      tags:
      - Clients
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
      - bearer_auth: {}
      responses:
        '200':
          description: client created
        '401':
          description: not authenticated
        '404':
          description: not found
    put:
      summary: Update client
      tags:
      - Clients
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
      - bearer_auth: {}
      responses:
        '200':
          description: client updated
        '401':
          description: not authenticated
        '422':
          description: invalid record
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                client:
                  type: object
                  properties:
                    name:
                      type: string
                    password:
                      type: string
                    payout_rate:
                      type: decimal
                      example: 75.0
              required:
              - client
  "/api/v1/clients/cards":
    get:
      summary: Retrieve list of client's cards
      tags:
      - Client/Cards
      security:
      - bearer_auth: {}
      responses:
        '200':
          description: success
        '401':
          description: not authenticated
    post:
      summary: Request a new card
      tags:
      - Client/Cards
      parameters: []
      security:
      - bearer_auth: {}
      responses:
        '201':
          description: card issued
        '401':
          description: not authenticated
        '422':
          description: record invalid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                card:
                  type: object
                  properties:
                    product_id:
                      type: string
                    activation_number:
                      type: string
                    pin_number:
                      type: string
                  required:
                  - product_id
              required:
              - card
  "/api/v1/clients/cards/activate":
    put:
      summary: Activate card
      tags:
      - Client/Cards
      parameters: []
      security:
      - bearer_auth: {}
      responses:
        '200':
          description: card activated
        '401':
          description: not authenticated
        '422':
          description: card can not be activated
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                card:
                  type: object
                  properties:
                    activation_number:
                      type: string
                    pin_number:
                      type: string
                  required:
                  - activation_number
              required:
              - card
  "/api/v1/clients/cards/redeem":
    put:
      summary: Redeem card
      tags:
      - Client/Cards
      parameters: []
      security:
      - bearer_auth: {}
      responses:
        '200':
          description: card redeemed
        '401':
          description: not authenticated
        '422':
          description: card can not be redeemed
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                card:
                  type: object
                  properties:
                    activation_number:
                      type: string
                    pin_number:
                      type: string
                  required:
                  - activation_number
              required:
              - card
  "/api/v1/clients/cards/cancel":
    put:
      summary: Cancel card
      tags:
      - Client/Cards
      parameters: []
      security:
      - bearer_auth: {}
      responses:
        '200':
          description: card canceled
        '401':
          description: not authenticated
        '422':
          description: card can not be canceled
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                card:
                  type: object
                  properties:
                    activation_number:
                      type: string
                    pin_number:
                      type: string
                  required:
                  - activation_number
              required:
              - card
  "/api/v1/clients/products":
    get:
      summary: Retrieve list of products client can access
      tags:
      - Client/Products
      security:
      - bearer_auth: {}
      responses:
        '200':
          description: success
        '401':
          description: not authenticated
  "/api/v1/clients/sessions":
    post:
      summary: Create a client session (login)
      tags:
      - Client/Sessions
      parameters: []
      responses:
        '201':
          description: session created
        '404':
          description: client not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                session:
                  type: object
                  properties:
                    identifier:
                      type: string
                  required:
                  - identifier
              required:
              - session
  "/api/v1/product_accesses":
    post:
      summary: Create product accesses for a client
      tags:
      - Product Accesses
      parameters: []
      security:
      - bearer_auth: {}
      responses:
        '201':
          description: product access created
        '401':
          description: not authenticated
        '422':
          description: record invalid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                product_access:
                  type: object
                  properties:
                    client_id:
                      type: string
                    product_ids:
                      type: array
                      items:
                        type: string
                  required:
                  - client_id
                  - product_ids
              required:
              - product_access
    delete:
      summary: Remove product accesses from a client
      tags:
      - Product Accesses
      parameters: []
      security:
      - bearer_auth: {}
      responses:
        '204':
          description: product accesses removed
        '401':
          description: not authenticated
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                product_access:
                  type: object
                  properties:
                    client_id:
                      type: string
                    product_ids:
                      type: array
                      items:
                        type: string
                  required:
                  - client_id
                  - product_ids
              required:
              - product_access
  "/api/v1/brands/{brand_id}/products":
    get:
      summary: Retrieve list of products by brand
      tags:
      - Products
      parameters:
      - name: brand_id
        in: path
        required: true
        schema:
          type: string
      security:
      - bearer_auth: {}
      responses:
        '200':
          description: success
        '401':
          description: not authenticated
    post:
      summary: Create product
      tags:
      - Products
      parameters:
      - name: brand_id
        in: path
        required: true
        schema:
          type: string
      security:
      - bearer_auth: {}
      responses:
        '201':
          description: product created
        '401':
          description: not authenticated
        '422':
          description: record invalid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                product:
                  type: object
                  properties:
                    state:
                      type: string
                      enum:
                      - active
                      - archived
                    price:
                      type: decimal
                      example: 100.055
                    currency:
                      type: string
                    fields_attributes:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        data:
                          type: string
                        field_type_id:
                          type: string
                        _destroy:
                          type: boolean
                      required:
                      - name
                  required:
                  - price
                  - currency
              required:
              - product
  "/api/v1/products/{id}":
    get:
      summary: Retrieve a product
      tags:
      - Products
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
      - bearer_auth: {}
      responses:
        '200':
          description: success
        '401':
          description: not authenticated
    put:
      summary: update a product
      tags:
      - Products
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
      - bearer_auth: {}
      responses:
        '200':
          description: product edited
        '401':
          description: not authenticated
        '422':
          description: record invalid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                product:
                  type: object
                  properties:
                    state:
                      type: string
                      enum:
                      - active
                      - archived
                    price:
                      type: decimal
                      example: 100.055
                    currency:
                      type: string
                    fields_attributes:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        data:
                          type: string
                        field_type_id:
                          type: string
                        _destroy:
                          type: boolean
              required:
              - product
    delete:
      summary: remove product
      tags:
      - Products
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
      - bearer_auth: {}
      responses:
        '204':
          description: product removed
        '401':
          description: not authenticated
  "/api/v1/sessions":
    post:
      summary: Create a session (login)
      tags:
      - Sessions
      parameters: []
      responses:
        '201':
          description: session created
        '404':
          description: invalid email or password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                session:
                  type: object
                  properties:
                    email:
                      type: string
                    password:
                      type: string
                  required:
                  - email
                  - password
              required:
              - session
  "/api/v1/users":
    post:
      summary: Create new user (signup)
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: user created
        '422':
          description: user already existed
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                    password:
                      type: string
                  required:
                  - email
                  - password
              required:
              - user
  "/api/v1/users/me":
    get:
      summary: Get user profile
      tags:
      - Users
      security:
      - bearer_auth: {}
      responses:
        '200':
          description: success
        '401':
          description: not authenticated
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
components:
  securitySchemes:
    bearer_auth:
      type: http
      scheme: bearer
      bearerFormat: JWT
