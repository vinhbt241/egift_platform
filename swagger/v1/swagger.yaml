---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/brands":
    get:
      summary: get all brands created by current user
      tags:
      - Brands
      security:
      - bearer_auth: {}
      responses:
        '200':
          description: success
        '401':
          description: not authenticated
    post:
      summary: create brand
      tags:
      - Brands
      parameters: []
      security:
      - bearer_auth: {}
      responses:
        '201':
          description: brand created
        '401':
          description: not authenticated
        '422':
          description: record invalid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                brand:
                  type: object
                  properties:
                    name:
                      type: string
                    state:
                      type: string
                      enum:
                      - active
                      - archived
                    fields_attributes:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        data:
                          type: text
                        field_type_id:
                          type: string
                        _destroy:
                          type: boolean
                      required:
                      - name
                  required:
                  - name
              required:
              - brand
  "/api/v1/brands/{id}":
    put:
      summary: update brand
      tags:
      - Brands
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
      - bearer_auth: {}
      responses:
        '200':
          description: brand edited
        '401':
          description: not authenticated
        '422':
          description: record invalid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                brand:
                  type: object
                  properties:
                    name:
                      type: string
                    state:
                      type: string
                      enum:
                      - active
                      - archived
                    fields_attributes:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        data:
                          type: text
                        field_type_id:
                          type: string
                        _destroy:
                          type: boolean
              required:
              - brand
  "/api/v1/brands/{brand_id}/products":
    get:
      summary: Retrieve list of products by brand
      tags:
      - Products
      parameters:
      - name: brand_id
        in: path
        required: true
        schema:
          type: string
      security:
      - bearer_auth: {}
      responses:
        '200':
          description: success
        '401':
          description: not authenticated
    post:
      summary: Create product
      tags:
      - Products
      parameters:
      - name: brand_id
        in: path
        required: true
        schema:
          type: string
      security:
      - bearer_auth: {}
      responses:
        '201':
          description: product created
        '401':
          description: not authenticated
        '422':
          description: record invalid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                product:
                  type: object
                  properties:
                    state:
                      type: string
                      enum:
                      - active
                      - archived
                    price:
                      type: decimal
                      example: 100.055
                    currency:
                      type: string
                    fields_attributes:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        data:
                          type: text
                        field_type_id:
                          type: string
                        _destroy:
                          type: boolean
                      required:
                      - name
                  required:
                  - price
                  - currency
              required:
              - product
  "/api/v1/products/{id}":
    get:
      summary: Retrieve a product
      tags:
      - Products
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
      - bearer_auth: {}
      responses:
        '200':
          description: success
        '401':
          description: not authenticated
    put:
      summary: update a product
      tags:
      - Products
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
      - bearer_auth: {}
      responses:
        '200':
          description: product edited
        '401':
          description: not authenticated
        '422':
          description: record invalid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                product:
                  type: object
                  properties:
                    state:
                      type: string
                      enum:
                      - active
                      - archived
                    price:
                      type: decimal
                      example: 100.055
                    currency:
                      type: string
                    fields_attributes:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        data:
                          type: text
                        field_type_id:
                          type: string
                        _destroy:
                          type: boolean
              required:
              - product
    delete:
      summary: remove product
      tags:
      - Products
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      security:
      - bearer_auth: {}
      responses:
        '204':
          description: product removed
        '401':
          description: not authenticated
  "/api/v1/sessions":
    post:
      summary: Create a session (login)
      tags:
      - Sessions
      parameters: []
      responses:
        '201':
          description: session created
        '404':
          description: invalid email or password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                session:
                  type: object
                  properties:
                    email:
                      type: string
                    password:
                      type: string
                  required:
                  - email
                  - password
              required:
              - session
  "/api/v1/users":
    post:
      summary: Create new user (signup)
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: user created
        '422':
          description: user already existed
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                    password:
                      type: string
                  required:
                  - email
                  - password
              required:
              - user
  "/api/v1/users/me":
    get:
      summary: Get user profile
      tags:
      - Users
      security:
      - bearer_auth: {}
      responses:
        '200':
          description: success
        '401':
          description: not authenticated
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
components:
  securitySchemes:
    bearer_auth:
      type: http
      scheme: bearer
      bearerFormat: JWT
